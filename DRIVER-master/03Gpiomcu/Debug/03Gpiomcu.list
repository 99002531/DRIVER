
03Gpiomcu.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000484  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800062c  08000634  00010634  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800062c  0800062c  00010634  2**0
                  CONTENTS
  4 .ARM          00000000  0800062c  0800062c  00010634  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800062c  08000634  00010634  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800062c  0800062c  0001062c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000630  08000630  00010630  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010634  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000634  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000634  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010634  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000f97  00000000  00000000  00010664  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000002d0  00000000  00000000  000115fb  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000a8  00000000  00000000  000118d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000080  00000000  00000000  00011978  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001f94  00000000  00000000  000119f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000b51  00000000  00000000  0001398c  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009137  00000000  00000000  000144dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001d614  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d8  00000000  00000000  0001d690  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000614 	.word	0x08000614

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000614 	.word	0x08000614

080001e8 <main>:
void delay()
{
	for(uint32_t i=0;i<50000;i++);
}
int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b088      	sub	sp, #32
 80001ec:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIO_led;
	GPIO_led.pGPIOx =GPIOD;
 80001ee:	4b21      	ldr	r3, [pc, #132]	; (8000274 <main+0x8c>)
 80001f0:	613b      	str	r3, [r7, #16]
	GPIO_led.GPIO_PinConfig.GPIO_PinNumber = GPIO_Pin_No_15;
 80001f2:	230f      	movs	r3, #15
 80001f4:	753b      	strb	r3, [r7, #20]
	//GPIO_led.GPIO_PinConfig.GPIO_PinNumber = GPIO_Pin_No_12;
	GPIO_led.GPIO_PinConfig.GPIO_PinMode= GPIO_Pin_Mode_Output;
 80001f6:	2301      	movs	r3, #1
 80001f8:	757b      	strb	r3, [r7, #21]
	GPIO_led.GPIO_PinConfig.GPIO_PinSpeed=GPIO_Pin_VERYHIGH_Speed;
 80001fa:	2303      	movs	r3, #3
 80001fc:	75bb      	strb	r3, [r7, #22]
	GPIO_led.GPIO_PinConfig.GPIO_PinOPType=GPIO_PinOPType_PushPull;
 80001fe:	2300      	movs	r3, #0
 8000200:	75fb      	strb	r3, [r7, #23]
	GPIO_led.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_PinPuPdControl_No	;
 8000202:	2300      	movs	r3, #0
 8000204:	763b      	strb	r3, [r7, #24]
	GPIO_Periclkcntrl(GPIOD, ENABLE);
 8000206:	2101      	movs	r1, #1
 8000208:	481a      	ldr	r0, [pc, #104]	; (8000274 <main+0x8c>)
 800020a:	f000 f91b 	bl	8000444 <GPIO_Periclkcntrl>
	GPIO_Init(&GPIO_led);
 800020e:	f107 0310 	add.w	r3, r7, #16
 8000212:	4618      	mov	r0, r3
 8000214:	f000 f85b 	bl	80002ce <GPIO_Init>


		GPIO_Handle_t GPIOUserSwitch;
		GPIOUserSwitch.pGPIOx = GPIOA;
 8000218:	4b17      	ldr	r3, [pc, #92]	; (8000278 <main+0x90>)
 800021a:	607b      	str	r3, [r7, #4]
		GPIOUserSwitch.GPIO_PinConfig.GPIO_PinNumber = GPIO_Pin_No_0;
 800021c:	2300      	movs	r3, #0
 800021e:	723b      	strb	r3, [r7, #8]
		GPIOUserSwitch.GPIO_PinConfig.GPIO_PinMode = GPIO_Pin_Mode_Input;
 8000220:	2300      	movs	r3, #0
 8000222:	727b      	strb	r3, [r7, #9]
		GPIOUserSwitch.GPIO_PinConfig.GPIO_PinOPType = GPIO_PinOPType_PushPull;
 8000224:	2300      	movs	r3, #0
 8000226:	72fb      	strb	r3, [r7, #11]
		GPIOUserSwitch.GPIO_PinConfig.GPIO_PinSpeed = GPIO_Pin_VERYHIGH_Speed;
 8000228:	2303      	movs	r3, #3
 800022a:	72bb      	strb	r3, [r7, #10]
		GPIOUserSwitch.GPIO_PinConfig.GPIO_PinPuPdControl= GPIO_PinPuPdControl_No;
 800022c:	2300      	movs	r3, #0
 800022e:	733b      	strb	r3, [r7, #12]
		GPIO_Periclkcntrl(GPIOA, ENABLE);
 8000230:	2101      	movs	r1, #1
 8000232:	4811      	ldr	r0, [pc, #68]	; (8000278 <main+0x90>)
 8000234:	f000 f906 	bl	8000444 <GPIO_Periclkcntrl>
		GPIO_Init(&GPIOUserSwitch);
 8000238:	1d3b      	adds	r3, r7, #4
 800023a:	4618      	mov	r0, r3
 800023c:	f000 f847 	bl	80002ce <GPIO_Init>
		uint8_t temp =  (GPIO_ReadFromInputPin(GPIOA, GPIO_Pin_No_0));
 8000240:	2100      	movs	r1, #0
 8000242:	480d      	ldr	r0, [pc, #52]	; (8000278 <main+0x90>)
 8000244:	f000 f984 	bl	8000550 <GPIO_ReadFromInputPin>
 8000248:	4603      	mov	r3, r0
 800024a:	77fb      	strb	r3, [r7, #31]
		//printf("%d",temp);

		if (temp == 1)
 800024c:	7ffb      	ldrb	r3, [r7, #31]
 800024e:	2b01      	cmp	r3, #1
 8000250:	d105      	bne.n	800025e <main+0x76>
			GPIO_WriteToOutputPin(GPIOD, GPIO_Pin_No_15, ENABLE);
 8000252:	2201      	movs	r2, #1
 8000254:	210f      	movs	r1, #15
 8000256:	4807      	ldr	r0, [pc, #28]	; (8000274 <main+0x8c>)
 8000258:	f000 f992 	bl	8000580 <GPIO_WriteToOutputPin>
 800025c:	e004      	b.n	8000268 <main+0x80>
		else
			GPIO_WriteToOutputPin(GPIOD, GPIO_Pin_No_15, DISABLE);
 800025e:	2200      	movs	r2, #0
 8000260:	210f      	movs	r1, #15
 8000262:	4804      	ldr	r0, [pc, #16]	; (8000274 <main+0x8c>)
 8000264:	f000 f98c 	bl	8000580 <GPIO_WriteToOutputPin>
		//delay();



return 0;
 8000268:	2300      	movs	r3, #0
}
 800026a:	4618      	mov	r0, r3
 800026c:	3720      	adds	r7, #32
 800026e:	46bd      	mov	sp, r7
 8000270:	bd80      	pop	{r7, pc}
 8000272:	bf00      	nop
 8000274:	40020c00 	.word	0x40020c00
 8000278:	40020000 	.word	0x40020000

0800027c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800027c:	480d      	ldr	r0, [pc, #52]	; (80002b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000280:	480d      	ldr	r0, [pc, #52]	; (80002b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000282:	490e      	ldr	r1, [pc, #56]	; (80002bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000284:	4a0e      	ldr	r2, [pc, #56]	; (80002c0 <LoopForever+0xe>)
  movs r3, #0
 8000286:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000288:	e002      	b.n	8000290 <LoopCopyDataInit>

0800028a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800028c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800028e:	3304      	adds	r3, #4

08000290 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000290:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000292:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000294:	d3f9      	bcc.n	800028a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000296:	4a0b      	ldr	r2, [pc, #44]	; (80002c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000298:	4c0b      	ldr	r4, [pc, #44]	; (80002c8 <LoopForever+0x16>)
  movs r3, #0
 800029a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800029c:	e001      	b.n	80002a2 <LoopFillZerobss>

0800029e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800029e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a0:	3204      	adds	r2, #4

080002a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a4:	d3fb      	bcc.n	800029e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002a6:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002aa:	f000 f98f 	bl	80005cc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ae:	f7ff ff9b 	bl	80001e8 <main>

080002b2 <LoopForever>:

LoopForever:
    b LoopForever
 80002b2:	e7fe      	b.n	80002b2 <LoopForever>
  ldr   r0, =_estack
 80002b4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002bc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002c0:	08000634 	.word	0x08000634
  ldr r2, =_sbss
 80002c4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c8:	2000001c 	.word	0x2000001c

080002cc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002cc:	e7fe      	b.n	80002cc <ADC_IRQHandler>

080002ce <GPIO_Init>:
 * @date and time
 *

 */
void GPIO_Init(GPIO_Handle_t *GPIOHandle)
{	//init mode
 80002ce:	b480      	push	{r7}
 80002d0:	b085      	sub	sp, #20
 80002d2:	af00      	add	r7, sp, #0
 80002d4:	6078      	str	r0, [r7, #4]

	uint32_t temp=0;
 80002d6:	2300      	movs	r3, #0
 80002d8:	60fb      	str	r3, [r7, #12]
	temp=(GPIOHandle->GPIO_PinConfig.GPIO_PinMode<<(2*GPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	795b      	ldrb	r3, [r3, #5]
 80002de:	461a      	mov	r2, r3
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	791b      	ldrb	r3, [r3, #4]
 80002e4:	005b      	lsls	r3, r3, #1
 80002e6:	fa02 f303 	lsl.w	r3, r2, r3
 80002ea:	60fb      	str	r3, [r7, #12]
	(GPIOHandle->pGPIOx->MODER) &=~(2*0x3<<GPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	681b      	ldr	r3, [r3, #0]
 80002f0:	681a      	ldr	r2, [r3, #0]
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	791b      	ldrb	r3, [r3, #4]
 80002f6:	4619      	mov	r1, r3
 80002f8:	2306      	movs	r3, #6
 80002fa:	408b      	lsls	r3, r1
 80002fc:	43db      	mvns	r3, r3
 80002fe:	4619      	mov	r1, r3
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	400a      	ands	r2, r1
 8000306:	601a      	str	r2, [r3, #0]
	GPIOHandle->pGPIOx->MODER |=temp;
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	6819      	ldr	r1, [r3, #0]
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	681b      	ldr	r3, [r3, #0]
 8000312:	68fa      	ldr	r2, [r7, #12]
 8000314:	430a      	orrs	r2, r1
 8000316:	601a      	str	r2, [r3, #0]


	//configure speed
	temp=0;
 8000318:	2300      	movs	r3, #0
 800031a:	60fb      	str	r3, [r7, #12]
	temp=(GPIOHandle->GPIO_PinConfig.GPIO_PinSpeed<<(2*GPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	799b      	ldrb	r3, [r3, #6]
 8000320:	461a      	mov	r2, r3
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	791b      	ldrb	r3, [r3, #4]
 8000326:	005b      	lsls	r3, r3, #1
 8000328:	fa02 f303 	lsl.w	r3, r2, r3
 800032c:	60fb      	str	r3, [r7, #12]
	(GPIOHandle->pGPIOx->OSPEEDR) &=~(2*0x3<<GPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	689a      	ldr	r2, [r3, #8]
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	791b      	ldrb	r3, [r3, #4]
 8000338:	4619      	mov	r1, r3
 800033a:	2306      	movs	r3, #6
 800033c:	408b      	lsls	r3, r1
 800033e:	43db      	mvns	r3, r3
 8000340:	4619      	mov	r1, r3
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	400a      	ands	r2, r1
 8000348:	609a      	str	r2, [r3, #8]
	GPIOHandle->pGPIOx->OSPEEDR |=temp;
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	6899      	ldr	r1, [r3, #8]
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	68fa      	ldr	r2, [r7, #12]
 8000356:	430a      	orrs	r2, r1
 8000358:	609a      	str	r2, [r3, #8]

	//configure pull up or down
	temp=0;
 800035a:	2300      	movs	r3, #0
 800035c:	60fb      	str	r3, [r7, #12]
	temp=(GPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl<<(2*GPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	7a1b      	ldrb	r3, [r3, #8]
 8000362:	461a      	mov	r2, r3
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	791b      	ldrb	r3, [r3, #4]
 8000368:	005b      	lsls	r3, r3, #1
 800036a:	fa02 f303 	lsl.w	r3, r2, r3
 800036e:	60fb      	str	r3, [r7, #12]
	(GPIOHandle->pGPIOx->PUPDR) &=~(2*0x3<<GPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	68da      	ldr	r2, [r3, #12]
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	791b      	ldrb	r3, [r3, #4]
 800037a:	4619      	mov	r1, r3
 800037c:	2306      	movs	r3, #6
 800037e:	408b      	lsls	r3, r1
 8000380:	43db      	mvns	r3, r3
 8000382:	4619      	mov	r1, r3
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	681b      	ldr	r3, [r3, #0]
 8000388:	400a      	ands	r2, r1
 800038a:	60da      	str	r2, [r3, #12]
	GPIOHandle->pGPIOx-> PUPDR |=temp;
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	681b      	ldr	r3, [r3, #0]
 8000390:	68d9      	ldr	r1, [r3, #12]
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	68fa      	ldr	r2, [r7, #12]
 8000398:	430a      	orrs	r2, r1
 800039a:	60da      	str	r2, [r3, #12]

	//configure output type
	temp=0;
 800039c:	2300      	movs	r3, #0
 800039e:	60fb      	str	r3, [r7, #12]
	temp=(GPIOHandle->GPIO_PinConfig.GPIO_PinOPType<<(GPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	79db      	ldrb	r3, [r3, #7]
 80003a4:	461a      	mov	r2, r3
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	791b      	ldrb	r3, [r3, #4]
 80003aa:	fa02 f303 	lsl.w	r3, r2, r3
 80003ae:	60fb      	str	r3, [r7, #12]
	(GPIOHandle->pGPIOx->OTYPER) &=~(0x1<<GPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	685a      	ldr	r2, [r3, #4]
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	791b      	ldrb	r3, [r3, #4]
 80003ba:	4619      	mov	r1, r3
 80003bc:	2301      	movs	r3, #1
 80003be:	408b      	lsls	r3, r1
 80003c0:	43db      	mvns	r3, r3
 80003c2:	4619      	mov	r1, r3
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	400a      	ands	r2, r1
 80003ca:	605a      	str	r2, [r3, #4]
	GPIOHandle->pGPIOx-> OTYPER |=temp;
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	6859      	ldr	r1, [r3, #4]
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	68fa      	ldr	r2, [r7, #12]
 80003d8:	430a      	orrs	r2, r1
 80003da:	605a      	str	r2, [r3, #4]

	//configure Alternating function

	uint8_t temp1=0;
 80003dc:	2300      	movs	r3, #0
 80003de:	72fb      	strb	r3, [r7, #11]
	uint8_t temp2=0;
 80003e0:	2300      	movs	r3, #0
 80003e2:	72bb      	strb	r3, [r7, #10]
	temp1= (GPIOHandle->GPIO_PinConfig.GPIO_PinNumber) /8;
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	791b      	ldrb	r3, [r3, #4]
 80003e8:	08db      	lsrs	r3, r3, #3
 80003ea:	72fb      	strb	r3, [r7, #11]
	temp2= (GPIOHandle->GPIO_PinConfig.GPIO_PinNumber) %8;
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	791b      	ldrb	r3, [r3, #4]
 80003f0:	f003 0307 	and.w	r3, r3, #7
 80003f4:	72bb      	strb	r3, [r7, #10]
	(GPIOHandle->pGPIOx->AFR[temp1]) &=~(4*0xF<<temp2);
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	7afa      	ldrb	r2, [r7, #11]
 80003fc:	3208      	adds	r2, #8
 80003fe:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000402:	7abb      	ldrb	r3, [r7, #10]
 8000404:	223c      	movs	r2, #60	; 0x3c
 8000406:	fa02 f303 	lsl.w	r3, r2, r3
 800040a:	43db      	mvns	r3, r3
 800040c:	4618      	mov	r0, r3
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	7afa      	ldrb	r2, [r7, #11]
 8000414:	4001      	ands	r1, r0
 8000416:	3208      	adds	r2, #8
 8000418:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	GPIOHandle->pGPIOx->AFR[temp1] = (GPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode)<<(4*temp2);
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	7a5b      	ldrb	r3, [r3, #9]
 8000420:	461a      	mov	r2, r3
 8000422:	7abb      	ldrb	r3, [r7, #10]
 8000424:	009b      	lsls	r3, r3, #2
 8000426:	fa02 f103 	lsl.w	r1, r2, r3
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	7afa      	ldrb	r2, [r7, #11]
 8000430:	3208      	adds	r2, #8
 8000432:	f843 1022 	str.w	r1, [r3, r2, lsl #2]



}
 8000436:	bf00      	nop
 8000438:	3714      	adds	r7, #20
 800043a:	46bd      	mov	sp, r7
 800043c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000440:	4770      	bx	lr
	...

08000444 <GPIO_Periclkcntrl>:
 *

 */

void GPIO_Periclkcntrl(GPIO_REGDEF_t *pGPIOx, uint8_t EnorDi)
{
 8000444:	b480      	push	{r7}
 8000446:	b083      	sub	sp, #12
 8000448:	af00      	add	r7, sp, #0
 800044a:	6078      	str	r0, [r7, #4]
 800044c:	460b      	mov	r3, r1
 800044e:	70fb      	strb	r3, [r7, #3]
	if(EnorDi==ENABLE)
 8000450:	78fb      	ldrb	r3, [r7, #3]
 8000452:	2b01      	cmp	r3, #1
 8000454:	d161      	bne.n	800051a <GPIO_Periclkcntrl+0xd6>
	{
		if(pGPIOx==GPIOA)
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	4a33      	ldr	r2, [pc, #204]	; (8000528 <GPIO_Periclkcntrl+0xe4>)
 800045a:	4293      	cmp	r3, r2
 800045c:	d106      	bne.n	800046c <GPIO_Periclkcntrl+0x28>
			GPIOA_CLK_EN();
 800045e:	4b33      	ldr	r3, [pc, #204]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 8000460:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000462:	4a32      	ldr	r2, [pc, #200]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 8000464:	f043 0301 	orr.w	r3, r3, #1
 8000468:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx==GPIOI)
			GPIOI_CLK_EN();
		else
		{}
	}
}
 800046a:	e056      	b.n	800051a <GPIO_Periclkcntrl+0xd6>
		else if(pGPIOx==GPIOB)
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	4a30      	ldr	r2, [pc, #192]	; (8000530 <GPIO_Periclkcntrl+0xec>)
 8000470:	4293      	cmp	r3, r2
 8000472:	d106      	bne.n	8000482 <GPIO_Periclkcntrl+0x3e>
			GPIOB_CLK_EN();
 8000474:	4b2d      	ldr	r3, [pc, #180]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 8000476:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000478:	4a2c      	ldr	r2, [pc, #176]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 800047a:	f043 0302 	orr.w	r3, r3, #2
 800047e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000480:	e04b      	b.n	800051a <GPIO_Periclkcntrl+0xd6>
		else if(pGPIOx==GPIOC)
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	4a2b      	ldr	r2, [pc, #172]	; (8000534 <GPIO_Periclkcntrl+0xf0>)
 8000486:	4293      	cmp	r3, r2
 8000488:	d106      	bne.n	8000498 <GPIO_Periclkcntrl+0x54>
			GPIOC_CLK_EN();
 800048a:	4b28      	ldr	r3, [pc, #160]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 800048c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800048e:	4a27      	ldr	r2, [pc, #156]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 8000490:	f043 0304 	orr.w	r3, r3, #4
 8000494:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000496:	e040      	b.n	800051a <GPIO_Periclkcntrl+0xd6>
		else if(pGPIOx==GPIOD)
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	4a27      	ldr	r2, [pc, #156]	; (8000538 <GPIO_Periclkcntrl+0xf4>)
 800049c:	4293      	cmp	r3, r2
 800049e:	d106      	bne.n	80004ae <GPIO_Periclkcntrl+0x6a>
			GPIOD_CLK_EN();
 80004a0:	4b22      	ldr	r3, [pc, #136]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 80004a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004a4:	4a21      	ldr	r2, [pc, #132]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 80004a6:	f043 0308 	orr.w	r3, r3, #8
 80004aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004ac:	e035      	b.n	800051a <GPIO_Periclkcntrl+0xd6>
		else if(pGPIOx==GPIOE)
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	4a22      	ldr	r2, [pc, #136]	; (800053c <GPIO_Periclkcntrl+0xf8>)
 80004b2:	4293      	cmp	r3, r2
 80004b4:	d106      	bne.n	80004c4 <GPIO_Periclkcntrl+0x80>
			GPIOE_CLK_EN();
 80004b6:	4b1d      	ldr	r3, [pc, #116]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 80004b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ba:	4a1c      	ldr	r2, [pc, #112]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 80004bc:	f043 0310 	orr.w	r3, r3, #16
 80004c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004c2:	e02a      	b.n	800051a <GPIO_Periclkcntrl+0xd6>
		else if(pGPIOx==GPIOF)
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	4a1e      	ldr	r2, [pc, #120]	; (8000540 <GPIO_Periclkcntrl+0xfc>)
 80004c8:	4293      	cmp	r3, r2
 80004ca:	d106      	bne.n	80004da <GPIO_Periclkcntrl+0x96>
			GPIOF_CLK_EN();
 80004cc:	4b17      	ldr	r3, [pc, #92]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 80004ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004d0:	4a16      	ldr	r2, [pc, #88]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 80004d2:	f043 0320 	orr.w	r3, r3, #32
 80004d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004d8:	e01f      	b.n	800051a <GPIO_Periclkcntrl+0xd6>
		else if(pGPIOx==GPIOG)
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	4a19      	ldr	r2, [pc, #100]	; (8000544 <GPIO_Periclkcntrl+0x100>)
 80004de:	4293      	cmp	r3, r2
 80004e0:	d106      	bne.n	80004f0 <GPIO_Periclkcntrl+0xac>
			GPIOG_CLK_EN();
 80004e2:	4b12      	ldr	r3, [pc, #72]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 80004e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004e6:	4a11      	ldr	r2, [pc, #68]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 80004e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80004ec:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004ee:	e014      	b.n	800051a <GPIO_Periclkcntrl+0xd6>
		else if(pGPIOx==GPIOH)
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	4a15      	ldr	r2, [pc, #84]	; (8000548 <GPIO_Periclkcntrl+0x104>)
 80004f4:	4293      	cmp	r3, r2
 80004f6:	d106      	bne.n	8000506 <GPIO_Periclkcntrl+0xc2>
			GPIOH_CLK_EN();
 80004f8:	4b0c      	ldr	r3, [pc, #48]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 80004fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004fc:	4a0b      	ldr	r2, [pc, #44]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 80004fe:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000502:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000504:	e009      	b.n	800051a <GPIO_Periclkcntrl+0xd6>
		else if(pGPIOx==GPIOI)
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	4a10      	ldr	r2, [pc, #64]	; (800054c <GPIO_Periclkcntrl+0x108>)
 800050a:	4293      	cmp	r3, r2
 800050c:	d105      	bne.n	800051a <GPIO_Periclkcntrl+0xd6>
			GPIOI_CLK_EN();
 800050e:	4b07      	ldr	r3, [pc, #28]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 8000510:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000512:	4a06      	ldr	r2, [pc, #24]	; (800052c <GPIO_Periclkcntrl+0xe8>)
 8000514:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000518:	6313      	str	r3, [r2, #48]	; 0x30
}
 800051a:	bf00      	nop
 800051c:	370c      	adds	r7, #12
 800051e:	46bd      	mov	sp, r7
 8000520:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000524:	4770      	bx	lr
 8000526:	bf00      	nop
 8000528:	40020000 	.word	0x40020000
 800052c:	40023800 	.word	0x40023800
 8000530:	40020400 	.word	0x40020400
 8000534:	40020800 	.word	0x40020800
 8000538:	40020c00 	.word	0x40020c00
 800053c:	40021000 	.word	0x40021000
 8000540:	40021400 	.word	0x40021400
 8000544:	40021800 	.word	0x40021800
 8000548:	40021c00 	.word	0x40021c00
 800054c:	40022000 	.word	0x40022000

08000550 <GPIO_ReadFromInputPin>:
 * @date and time
 *

 */
uint8_t GPIO_ReadFromInputPin(GPIO_REGDEF_t *pGPIOx,uint8_t PinNo)
{
 8000550:	b480      	push	{r7}
 8000552:	b085      	sub	sp, #20
 8000554:	af00      	add	r7, sp, #0
 8000556:	6078      	str	r0, [r7, #4]
 8000558:	460b      	mov	r3, r1
 800055a:	70fb      	strb	r3, [r7, #3]
	uint8_t val=0;
 800055c:	2300      	movs	r3, #0
 800055e:	73fb      	strb	r3, [r7, #15]
	val =(uint8_t)(pGPIOx->IDR>>PinNo) & (0x00000001);
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	691a      	ldr	r2, [r3, #16]
 8000564:	78fb      	ldrb	r3, [r7, #3]
 8000566:	fa22 f303 	lsr.w	r3, r2, r3
 800056a:	b2db      	uxtb	r3, r3
 800056c:	f003 0301 	and.w	r3, r3, #1
 8000570:	73fb      	strb	r3, [r7, #15]

	return val;
 8000572:	7bfb      	ldrb	r3, [r7, #15]
}
 8000574:	4618      	mov	r0, r3
 8000576:	3714      	adds	r7, #20
 8000578:	46bd      	mov	sp, r7
 800057a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800057e:	4770      	bx	lr

08000580 <GPIO_WriteToOutputPin>:
 *

 */

void GPIO_WriteToOutputPin(GPIO_REGDEF_t *pGPIOx,uint8_t PinNo,uint8_t value)
{
 8000580:	b480      	push	{r7}
 8000582:	b083      	sub	sp, #12
 8000584:	af00      	add	r7, sp, #0
 8000586:	6078      	str	r0, [r7, #4]
 8000588:	460b      	mov	r3, r1
 800058a:	70fb      	strb	r3, [r7, #3]
 800058c:	4613      	mov	r3, r2
 800058e:	70bb      	strb	r3, [r7, #2]
	if(value==GPIO_Pin_Set)
 8000590:	78bb      	ldrb	r3, [r7, #2]
 8000592:	2b01      	cmp	r3, #1
 8000594:	d109      	bne.n	80005aa <GPIO_WriteToOutputPin+0x2a>
		pGPIOx->ODR  |= 1<<PinNo;
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	695b      	ldr	r3, [r3, #20]
 800059a:	78fa      	ldrb	r2, [r7, #3]
 800059c:	2101      	movs	r1, #1
 800059e:	fa01 f202 	lsl.w	r2, r1, r2
 80005a2:	431a      	orrs	r2, r3
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	615a      	str	r2, [r3, #20]
	else
		pGPIOx->ODR  &= ~(1<<PinNo);
}
 80005a8:	e009      	b.n	80005be <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR  &= ~(1<<PinNo);
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	695b      	ldr	r3, [r3, #20]
 80005ae:	78fa      	ldrb	r2, [r7, #3]
 80005b0:	2101      	movs	r1, #1
 80005b2:	fa01 f202 	lsl.w	r2, r1, r2
 80005b6:	43d2      	mvns	r2, r2
 80005b8:	401a      	ands	r2, r3
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	615a      	str	r2, [r3, #20]
}
 80005be:	bf00      	nop
 80005c0:	370c      	adds	r7, #12
 80005c2:	46bd      	mov	sp, r7
 80005c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c8:	4770      	bx	lr
	...

080005cc <__libc_init_array>:
 80005cc:	b570      	push	{r4, r5, r6, lr}
 80005ce:	4e0d      	ldr	r6, [pc, #52]	; (8000604 <__libc_init_array+0x38>)
 80005d0:	4c0d      	ldr	r4, [pc, #52]	; (8000608 <__libc_init_array+0x3c>)
 80005d2:	1ba4      	subs	r4, r4, r6
 80005d4:	10a4      	asrs	r4, r4, #2
 80005d6:	2500      	movs	r5, #0
 80005d8:	42a5      	cmp	r5, r4
 80005da:	d109      	bne.n	80005f0 <__libc_init_array+0x24>
 80005dc:	4e0b      	ldr	r6, [pc, #44]	; (800060c <__libc_init_array+0x40>)
 80005de:	4c0c      	ldr	r4, [pc, #48]	; (8000610 <__libc_init_array+0x44>)
 80005e0:	f000 f818 	bl	8000614 <_init>
 80005e4:	1ba4      	subs	r4, r4, r6
 80005e6:	10a4      	asrs	r4, r4, #2
 80005e8:	2500      	movs	r5, #0
 80005ea:	42a5      	cmp	r5, r4
 80005ec:	d105      	bne.n	80005fa <__libc_init_array+0x2e>
 80005ee:	bd70      	pop	{r4, r5, r6, pc}
 80005f0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005f4:	4798      	blx	r3
 80005f6:	3501      	adds	r5, #1
 80005f8:	e7ee      	b.n	80005d8 <__libc_init_array+0xc>
 80005fa:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005fe:	4798      	blx	r3
 8000600:	3501      	adds	r5, #1
 8000602:	e7f2      	b.n	80005ea <__libc_init_array+0x1e>
 8000604:	0800062c 	.word	0x0800062c
 8000608:	0800062c 	.word	0x0800062c
 800060c:	0800062c 	.word	0x0800062c
 8000610:	08000630 	.word	0x08000630

08000614 <_init>:
 8000614:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000616:	bf00      	nop
 8000618:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800061a:	bc08      	pop	{r3}
 800061c:	469e      	mov	lr, r3
 800061e:	4770      	bx	lr

08000620 <_fini>:
 8000620:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000622:	bf00      	nop
 8000624:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000626:	bc08      	pop	{r3}
 8000628:	469e      	mov	lr, r3
 800062a:	4770      	bx	lr
